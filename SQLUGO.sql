WITH ANALISE AS (
  SELECT ADD_MONTHS(TRUNC(SYSDATE, 'YEAR'), - 12) LIMITE_INFERIOR,
       SYSDATE AS LIMITE_SUPERIOR,
       30 AS TOLERANCIA
    FROM DUAL
),

VFRETES_TERCEIRO AS (
SELECT VF.VF VALEFRETE_CODIGO,
     VF.SERIE VALEFRETE_SERIE,
     VF.ROTA VALEFRETE_ROTA,
     VF.CON_VALEFRETE_SAQUE VALEFRETE_SAQUE,
     VF.DTEMISSAO VALEFRETE_DTEMISSAO,
     VF.USUARIO VALEFRETE_EMISSOR,
     VF.DATACADASTRO VALEFRETE_DTCADASTRO,
     VF.DATAPRAZOMAX VALEFRETE_DTPRAZOMAX,
     VF.PLACA VALEFRETE_PLACA,
     VF.PLACASAQUE VALEFRETE_PLACASAQUE,
     CASE 
     WHEN VF.TP_MOTORISTA = 'A' THEN
      'AGREGADO'
     WHEN VF.TP_MOTORISTA = 'C' THEN
      'CARRETEIRO'
     WHEN VF.TP_MOTORISTA = 'D' THEN
      'DEDICADO'
     WHEN VF.TP_MOTORISTA = 'F' THEN
      'FROTA'
     ELSE VF.TP_MOTORISTA
     END VALEFRETE_TPMOTORISTA,
     VFC.CTE VALEFRETE_CTE,
     VFC.CTESERIE VALEFRETE_CTESERIE,
     VFC.CTEROTA VALEFRETE_CTEROTA,
     VF.CATEGORIA_CODIGO VALEFRETE_CATEGORIACOD,
     CAT.DESCRICAO VALEFRETE_CATEGORIADESC,
     CASE 
     WHEN TPV.LOTACAOMAX > 1000 THEN
      TPV.LOTACAOMAX / 1000
     ELSE 
      TPV.LOTACAOMAX
     END VALEFRETE_VEICULOCAPACIDADE,
     TPV.DESCRICAO VALEFRETE_VEICULODESCRICAO,
     TPV.NUMEROEIXOS VALEFRETE_VEICULOEIXOS,
     
     VF.GLB_LOCALIDADE_CODIGOORI VALEFRETE_LOCALIDADEORIGEM,
     VF.GLB_LOCALIDADE_CODIGODES VALEFRETE_LOCALIDADEDESTINO,
     
     (SELECT PERC.KM
        FROM TDVADM.V_SLF_PERCURSO PERC
     WHERE PERC.ORIGEMLOCALIDADE = VF.GLB_LOCALIDADE_CODIGOORI
       AND PERC.DESTINOLOCALIDADE = VF.GLB_LOCALIDADE_CODIGODES) VALEFRETE_KMPERCURSO,
     
     ROTA.UF VALEFRETE_UFROTA,
     ROTA.CIDADE VALEFRETE_CIDROTA
  FROM TDVADM.V_CON_VF VF LEFT JOIN
       TDVADM.V_CON_VFCONHEC VFC
  ON VF.VF = VFC.VF
   AND VF.SERIE = VFC.VFSERIE
   AND VF.ROTA = VFC.VFROTA
   AND VF.CON_VALEFRETE_SAQUE = VFC.VFSAQUE LEFT JOIN
     TDVADM.V_CON_CATEGORIA CAT
  ON VF.CATEGORIA_CODIGO = CAT.COD_CATEGORIA LEFT JOIN
       TDVADM.V_CAR_VEICULOS VEICCARRET
  ON VEICCARRET.PLACA = VF.PLACA 
   AND VEICCARRET.SAQUE = VF.PLACASAQUE LEFT JOIN
       TDVADM.V_CAR_TPVEICULOS TPV
    ON TPV.TPveic = VEICCARRET.TIPO_VEICULO LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA
  ON VF.ROTA = ROTA.ROTA
 WHERE VF.DTEMISSAO >= (SELECT LIMITE_INFERIOR - TOLERANCIA FROM ANALISE)
   AND NVL(VF.STATUS, 'N') <> 'C' --NÃO CANCELADO
   AND NVL(VF.IMPRESSO, 'N') = 'S' --IMPRESSO
   AND UPPER(CAT.DESCRICAO) IN ('UMA VIAGEM', 'VÁRIAS VIAGENS', 'AVULSO COM CTRC') --SOMENTE CATEGORIAS DE VIAGEM
   AND VF.TP_MOTORISTA IN ('C', 'A') --CARRETEIRO e AGREGADO
),

VFRETES_FROTA AS (
SELECT VF.VF VALEFRETE_CODIGO,
     VF.SERIE VALEFRETE_SERIE,
     VF.ROTA VALEFRETE_ROTA,
     VF.CON_VALEFRETE_SAQUE VALEFRETE_SAQUE,
     VF.DTEMISSAO VALEFRETE_DTEMISSAO,
     VF.USUARIO VALEFRETE_EMISSOR,
     VF.DATACADASTRO VALEFRETE_DTCADASTRO,
     VF.DATAPRAZOMAX VALEFRETE_DTPRAZOMAX,
     VF.PLACA VALEFRETE_PLACA,
     VF.PLACASAQUE VALEFRETE_PLACASAQUE,
     CASE 
     WHEN VF.TP_MOTORISTA = 'A' THEN
      'AGREGADO'
     WHEN VF.TP_MOTORISTA = 'C' THEN
      'CARRETEIRO'
     WHEN VF.TP_MOTORISTA = 'D' THEN
      'DEDICADO'
     WHEN VF.TP_MOTORISTA = 'F' THEN
      'FROTA'
     ELSE VF.TP_MOTORISTA
     END VALEFRETE_TPMOTORISTA,
     VFC.CTE VALEFRETE_CTE,
     VFC.CTESERIE VALEFRETE_CTESERIE,
     VFC.CTEROTA VALEFRETE_CTEROTA,
     VF.CATEGORIA_CODIGO VALEFRETE_CATEGORIACOD,
     CAT.DESCRICAO VALEFRETE_CATEGORIADESC,
     CASE 
     WHEN VFMOTVEIC.LOTACAOMAX > 1000 THEN
      VFMOTVEIC.LOTACAOMAX / 1000
     ELSE 
      VFMOTVEIC.LOTACAOMAX
     END VALEFRETE_VEICULOCAPACIDADE,
     VFMOTVEIC.DESCRICAO VALEFRETE_VEICULODESCRICAO,
     VFMOTVEIC.NUMEIXOS VALEFRETE_VEICULOEIXOS,
     
     VF.GLB_LOCALIDADE_CODIGOORI VALEFRETE_LOCALIDADEORIGEM,
     VF.GLB_LOCALIDADE_CODIGODES VALEFRETE_LOCALIDADEDESTINO,
     
     (SELECT PERC.KM
        FROM TDVADM.V_SLF_PERCURSO PERC
     WHERE PERC.ORIGEMLOCALIDADE = VF.GLB_LOCALIDADE_CODIGOORI
       AND PERC.DESTINOLOCALIDADE = VF.GLB_LOCALIDADE_CODIGODES) VALEFRETE_KMPERCURSO,
     
     ROTA.UF VALEFRETE_UFROTA,
     ROTA.CIDADE VALEFRETE_CIDROTA
  FROM TDVADM.V_CON_VF VF LEFT JOIN
       TDVADM.V_CON_VFCONHEC VFC
  ON VF.VF = VFC.VF
   AND VF.SERIE = VFC.VFSERIE
   AND VF.ROTA = VFC.VFROTA
   AND VF.CON_VALEFRETE_SAQUE = VFC.VFSAQUE LEFT JOIN
     TDVADM.V_CON_CATEGORIA CAT 
  ON VF.CATEGORIA_CODIGO = CAT.COD_CATEGORIA LEFT JOIN
     TDVADM.V_FRT_BUSCAPLACA CONJUNTO
  ON CONJUNTO.CONJUNTO = VF.PLACA LEFT JOIN
       TDVADM.V_FRT_INFMOTVEICVF VFMOTVEIC
  ON VFMOTVEIC.PLACA = CONJUNTO.PLACA LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA
  ON VF.ROTA = ROTA.ROTA
 WHERE VF.DTEMISSAO >= (SELECT LIMITE_INFERIOR - TOLERANCIA FROM ANALISE)
   AND NVL(VF.STATUS, 'N') <> 'C' --NÃO CANCELADO
   AND NVL(VF.IMPRESSO, 'N') = 'S' --IMPRESSO
   AND UPPER(CAT.DESCRICAO) IN ('UMA VIAGEM', 'VÁRIAS VIAGENS', 'AVULSO COM CTRC') --SOMENTE CATEGORIAS DE VIAGEM
   AND VF.TP_MOTORISTA = 'F' --FROTA
),

VFRETES AS (
SELECT DISTINCT *
  FROM VFRETES_FROTA UNION ALL
SELECT *
  FROM VFRETES_TERCEIRO
),

CONHECIMENTOS AS (
SELECT CTE.CTE CTRC_CODIGO,
       CTE.SERIE CTRC_SERIE,
       CTE.ROTA CTRC_ROTA,     
     CTE.COLETANUM CTRC_COLETANUMERO,
     CTE.COLETACICLO CTRC_COLETACICLO,
     NVL(CTE.FLAGCANCEL, 'N') CTRC_CANCELADO,
     NDD.CHAVE CTRC_CHAVESEFAZ,    
     'CHAVE SEFAZ - ' || NDD.CHAVE CTRC_CHAVESEFAZ_TXT,    
     TO_DATE(NVL(NDD.DATARETORNO, CTE.DATAEMBARQUE), 'DD/MM/YYYY HH24:MI:SS') CTRC_DTEMISSAO,
     CTE.EMISSOR CTRC_EMISSOR,
     
     CLI.CNPJ CTRC_CNPJSACADO,
     CLI.RAZAOSOCIAL CTRC_RAZAOSACADO,
     
     GRP.NOME CTRC_GRUPOSACADONOME,
     
     CTE.REMETENTE CTRC_CNPJREMETENTE,
     CTE.DESTINATARIO CTRC_CNPJDESTINATARIO,
     
     CTE.ENDDESTINATARIO CTRC_TPENDDESTINATARIO,
     CTE.ENDREMETENTE CTRC_TPENDREMETENTE,
     
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(CTE.REMETENTE)
       AND END.TPEND = CTE.ENDREMETENTE) CTRC_CIDORIGEM,
       
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(CTE.DESTINATARIO)
       AND END.TPEND = CTE.ENDDESTINATARIO) CTRC_CIDDESTINO,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(CTE.REMETENTE)
       AND END.TPEND = CTE.ENDREMETENTE) CTRC_UFORIGEM,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(CTE.DESTINATARIO)
       AND END.TPEND = CTE.ENDDESTINATARIO) CTRC_UFDESTINO,
     
     (SELECT PERC.KM
        FROM TDVADM.V_SLF_PERCURSO PERC,
         TDVADM.V_GLB_CLIEND ENDORIGEM,
         TDVADM.V_GLB_CLIEND ENDDESTINO
     WHERE TRIM(ENDORIGEM.CNPJ) = TRIM(CTE.REMETENTE)
       AND ENDORIGEM.TPEND = CTE.ENDREMETENTE
       AND TRIM(ENDDESTINO.CNPJ) = TRIM(CTE.DESTINATARIO)
       AND ENDDESTINO.TPEND = CTE.ENDDESTINATARIO
       AND PERC.ORIGEMLOCALIDADE = ENDORIGEM.LOCALIDADE
       AND PERC.DESTINOLOCALIDADE = ENDDESTINO.LOCALIDADE) CTRC_KMPERCURSO,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE REM 
     WHERE TRIM(REM.CNPJ) = TRIM(CTE.REMETENTE)) CTRC_RAZAOREMETENTE,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE DEST 
     WHERE TRIM(DEST.CNPJ) = TRIM(CTE.DESTINATARIO)) CTRC_RAZAODESTINATARIO,
     
     CLI.GRUPO_ECONOMICO CTRC_GRUPOSACADO,
     
     (SELECT REM.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE REM
     WHERE TRIM(CTE.REMETENTE) = TRIM(REM.CNPJ)) CTRC_GRUPOREMETENTE,
     
     (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
     WHERE TRIM(CTE.DESTINATARIO) = TRIM(DEST.CNPJ)) CTRC_GRUPODESTINATARIO,
     
     CASE
     WHEN (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
       WHERE TRIM(CTE.DESTINATARIO) = TRIM(DEST.CNPJ)) = (SELECT REM.GRUPO_ECONOMICO
                                  FROM TDVADM.V_GLB_CLIENTE REM
                                 WHERE TRIM(CTE.REMETENTE) = TRIM(REM.CNPJ)) AND
      (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
       WHERE TRIM(CTE.DESTINATARIO) = TRIM(DEST.CNPJ)) = CLI.GRUPO_ECONOMICO THEN
        'TRANSFERÊNCIA'
     ELSE
      CASE 
      WHEN CLI.GRUPO_ECONOMICO = (SELECT DEST.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE DEST
                     WHERE TRIM(CTE.DESTINATARIO) = TRIM(DEST.CNPJ)) THEN
        'INBOUND'
      WHEN CLI.GRUPO_ECONOMICO = (SELECT REM.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE REM
                     WHERE TRIM(CTE.REMETENTE) = TRIM(REM.CNPJ)) THEN
        'OUTBOUND'
      ELSE
        'OUTROS'
      END
     END CTRC_OPERACAO,
     
     CTE.DTENTREGA CTRC_DTENTREGA,
     
     ROTA.UF CTRC_UFROTA,
     ROTA.CIDADE CTRC_CIDROTA,
     
     TTP.VALORTOTALPRESTACAO CTRC_VALORPRESTACAO,
     CTE.OBSERVACAO CTRC_OBSERVACAO,
     CFOP.CFOP CTRC_CFOP
     
  FROM TDVADM.V_OPE_CONHECIMENTOS CTE LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA
  ON CTE.ROTA = ROTA.ROTA LEFT JOIN
       TDVADM.V_GLB_CLIENTE CLI
    ON TRIM(CTE.SACADO) = TRIM(CLI.CNPJ) LEFT JOIN
       TDVADM.V_CON_CONTROLECTRCE NDD 
    ON CTE.CTE = NDD.CTE
   AND CTE.SERIE = NDD.SERIE
   AND CTE.ROTA = NDD.ROTA LEFT JOIN
     TDVADM.V_GLB_GRUPOECONOMICO GRP
  ON CLI.GRUPO_ECONOMICO = GRP.GRUPO LEFT JOIN
       TDVADM.V_CON_TOTPREST TTP
  ON CTE.CTE = TTP.CTE
   AND CTE.SERIE = TTP.SERIE
   AND CTE.ROTA = TTP.ROTA LEFT JOIN
       TDVADM.V_CON_CONHECCFOP CFOP
  ON CFOP.CTE = CTE.CTE
   AND CFOP.SERIE = CTE.SERIE
   AND CFOP.ROTA = CTE.ROTA LEFT JOIN
       TDVADM.V_CON_CONHECSUBSTS SUBST
  ON SUBST.CTEORIGEM = CTE.CTE
   AND SUBST.CTEORIGEMSERIE = CTE.SERIE
   AND SUBST.CTEORIGEMROTA = CTE.ROTA
 WHERE TO_DATE(NVL(NDD.DATARETORNO, CTE.DATAEMBARQUE), 'DD/MM/YYYY HH24:MI:SS') >= (SELECT LIMITE_INFERIOR - TOLERANCIA FROM ANALISE)
   AND TO_DATE(NVL(NDD.DATARETORNO, CTE.DATAEMBARQUE), 'DD/MM/YYYY HH24:MI:SS') <= (SELECT LIMITE_SUPERIOR FROM ANALISE)
   AND CFOP.CFOP NOT IN ('1206','2206') --NÃO INCLUIR CTes DE ANULAÇÃO
   AND SUBST.CTEORIGEM IS NULL -- NÃAO INCLUIR CTes SUBSTITUÍDOS
),

NOTAS AS (
SELECT NVL(NOTA.NOTA, NOTAD.NOTA) NOTA_NUMERO,
       NVL(NOTA.REMETENTE, NOTAD.CNPJREMETENTE) NOTA_CNPJREMETENTE,
     NOTA.TPENDREMET NOTA_TPENDREMETENTE,
     NOTA.DESTINATARIO NOTA_CNPJDESTINATARIO,
     NOTA.TPENDDEST NOTA_TPENDDESTINATARIO,
     NOTA.CNPJSACADO NOTA_CNPJSACADO,
     
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(NOTA.REMETENTE)
       AND END.TPEND = NOTA.TPENDREMET) NOTA_CIDORIGEM,
       
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(NOTA.DESTINATARIO)
       AND END.TPEND = NOTA.TPENDDEST) NOTA_CIDDESTINO,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(NOTA.REMETENTE)
       AND END.TPEND = NOTA.TPENDREMET) NOTA_UFORIGEM,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(NOTA.DESTINATARIO)
       AND END.TPEND = NOTA.TPENDDEST) NOTA_UFDESTINO,
       
     (SELECT PERC.KM
        FROM TDVADM.V_SLF_PERCURSO PERC,
         TDVADM.V_GLB_CLIEND ENDORIGEM,
         TDVADM.V_GLB_CLIEND ENDDESTINO
     WHERE TRIM(ENDORIGEM.CNPJ) = TRIM(NOTA.REMETENTE)
       AND ENDORIGEM.TPEND = NOTA.TPENDREMET
       AND TRIM(ENDDESTINO.CNPJ) = TRIM(NOTA.DESTINATARIO)
       AND ENDDESTINO.TPEND = NOTA.TPENDDEST
       AND PERC.ORIGEMLOCALIDADE = ENDORIGEM.LOCALIDADE
       AND PERC.DESTINOLOCALIDADE = ENDDESTINO.LOCALIDADE) NOTA_KMPERCURSO,
     
     CLI.RAZAOSOCIAL NOTA_RAZAOSACADO,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE REM 
     WHERE TRIM(REM.CNPJ) = TRIM(NOTA.REMETENTE)) NOTA_RAZAOREMETENTE,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE DEST 
     WHERE TRIM(DEST.CNPJ) = TRIM(NOTA.DESTINATARIO)) NOTA_RAZAODESTINATARIO,
     
     CLI.GRUPO_ECONOMICO NOTA_GRUPOSACADO,
     GRP.NOME NOTA_GRUPOSACADONOME,
     
     (SELECT REM.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE REM
     WHERE TRIM(NOTA.REMETENTE) = TRIM(REM.CNPJ)) NOTA_GRUPOREMETENTE,
     
     (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
     WHERE TRIM(NOTA.DESTINATARIO) = TRIM(DEST.CNPJ)) NOTA_GRUPODESTINATARIO,
     
     CASE
     WHEN (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
       WHERE TRIM(NOTA.DESTINATARIO) = TRIM(DEST.CNPJ)) = (SELECT REM.GRUPO_ECONOMICO
                                  FROM TDVADM.V_GLB_CLIENTE REM
                                 WHERE TRIM(NOTA.REMETENTE) = TRIM(REM.CNPJ)) AND
      (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
       WHERE TRIM(NOTA.DESTINATARIO) = TRIM(DEST.CNPJ)) = CLI.GRUPO_ECONOMICO THEN
        'TRANSFERÊNCIA'
     ELSE
      CASE 
      WHEN CLI.GRUPO_ECONOMICO = (SELECT DEST.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE DEST
                     WHERE TRIM(NOTA.DESTINATARIO) = TRIM(DEST.CNPJ)) THEN
        'INBOUND'
      WHEN CLI.GRUPO_ECONOMICO = (SELECT REM.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE REM
                     WHERE TRIM(NOTA.REMETENTE) = TRIM(REM.CNPJ)) THEN
        'OUTBOUND'
      ELSE
        'OUTROS'
      END
     END NOTA_OPERACAO,
     
     NVL(NOTA.CHAVENOTA, NOTAD.CHAVE_NF) NOTA_CHAVESEFAZ,
     'CHAVE SEFAZ - ' || NVL(NOTA.CHAVENOTA, NOTAD.CHAVE_NF) NOTA_CHAVESEFAZ_TXT,
     NOTA.DATA_INCLUSAO NOTA_DTINCLUSAO,
     NOTA.USUARIO NOTA_USUARIOINCLUIU,
     
     NVL(NOTA.PESO, NOTAD.PESO) NOTA_PESO,
     NOTAD.UNIDADE NOTA_UNIDADEPESO_DIGITMAN,
     NOTA.PESOBALANCA NOTA_PESOBALANCA,
     NOTAD.PESOCOBRADO NOTA_PESOCOBRADO,
     
     NOTA.COLETA NOTA_COLETA,
     NOTA.COLETACICLO NOTA_COLETACICLO,
     NVL(NOTA.CTE, NOTAD.CONHECIMENTO) NOTA_CTE,
     NVL(NOTA.CTESERIE, NOTAD.SERIE) NOTA_CTESERIE,
     NVL(NOTA.CTEROTA, NOTAD.ROTA) NOTA_CTEROTA,
     NOTA.CONTRATO NOTA_CONTRATOCODIGO,
     CONTRATO.DESCRICAO NOTA_CONTRATODESCRICAO,
     
     NOTA.ARMAZEM NOTA_ARMAZEMCODIGO,
     NVL(ROTA.UF, ROTA_MANUAL.UF) NOTA_UFARMAZEM,
     NVL(ROTA.CIDADE, ROTA_MANUAL.CIDADE) NOTA_CIDARMAZEM,
     
     EMB.EMBALAGEM EMBALAGEM_NUMERO,
     EMB.SEQEMBALAGEM EMBALAGEM_SEQUENCIA,
     EMB.ARMAZEM EMBALAGEM_ARMAZEMCODIGO,
     ROTAEMB.UF EMBALAGEM_UFARMAZEM,
     ROTAEMB.CIDADE EMBALAGEM_CIDARMAZEM,
         
     (SELECT MAX(DT_CHECKIN)
        FROM TDVADM.V_ARM_CARREGAMENTODET CDET
     WHERE CDET.EMBALAGEM = EMB.EMBALAGEM) EMBALAGEM_DTCHECKIN,
     
     CASE
     WHEN NVL(NOTA.QTDVOLUME, NOTAD.QTD_VOLUME) IS NULL OR NVL(NOTA.QTDVOLUME, NOTAD.QTD_VOLUME) > 300 THEN
      1
     ELSE
      NVL(NOTA.QTDVOLUME, NOTAD.QTD_VOLUME)
     END NOTA_QTDVOLUMES,
     
     NVL(NOTA.CFOP, NOTAD.GLB_CFOP_CODIGO) NOTA_CFOP,
     
     CASE
     WHEN NOTA.NOTA IS NULL THEN
      'MANUAL'
     ELSE
          'FIFO'
     END NOTA_DIGITACAO
  FROM TDVADM.V_ARM_NOTA2019 NOTA FULL OUTER JOIN
       TDVADM.V_CON_NFTRANSPORTA NOTAD
  ON NOTA.NOTA = TO_NUMBER(NOTAD.NOTA)
   AND TRIM(NOTA.REMETENTE) = TRIM(NOTAD.CNPJREMETENTE) LEFT JOIN
     TDVADM.V_ARM_EMBALAGEM EMB
  ON EMB.EMBALAGEM = NOTA.EMBALAGEM LEFT JOIN
       TDVADM.V_GLB_CLIENTE CLI
    ON TRIM(NOTA.CNPJSACADO) = TRIM(CLI.CNPJ) LEFT JOIN
     TDVADM.V_ARM_ARMAZEM ARM
  ON NOTA.ARMAZEM = ARM.ARMAZEM LEFT JOIN
     TDVADM.V_ARM_ARMAZEM ARMEMB
  ON EMB.ARMAZEM = ARMEMB.ARMAZEM LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA_MANUAL
  ON NOTAD.ROTA = ROTA_MANUAL.ROTA LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA
  ON ARM.ROTA = ROTA.ROTA LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTAEMB
  ON ARMEMB.ROTA = ROTAEMB.ROTA LEFT JOIN
       TDVADM.V_SLF_CONTRATOS CONTRATO 
  ON UPPER(TRIM(CONTRATO.CONTRATO)) = UPPER(TRIM(NOTA.CONTRATO)) LEFT JOIN
     TDVADM.V_GLB_GRUPOECONOMICO GRP
  ON CLI.GRUPO_ECONOMICO = GRP.GRUPO   
 WHERE NVL(NOTA.DATA_INCLUSAO, NOTAD.DATA_EMISSAO) >= (SELECT LIMITE_INFERIOR - TOLERANCIA FROM ANALISE)
   AND NVL(NOTA.DATA_INCLUSAO, NOTAD.DATA_EMISSAO) <= (SELECT LIMITE_SUPERIOR FROM ANALISE)
),

COLETAS AS (
SELECT COL.COLETA COLETA_NUMERO,
       COL.COLETACICLO COLETA_CICLO,
     COL.XML_COLETA COLETA_ASN,
     COL.OBSERVACAO COLETA_OBSERVACAO,
     
     COL.CNPJREMETENTE COLETA_CNPJREMETENTE,
     COL.TPENDREMET COLETA_TPENDREMETENTE,
     COL.CNPJDESTINO COLETA_CNPJDESTINATARIO,
     COL.TPENDDEST COLETA_TPENDDESTINATARIO,
     
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJREMETENTE)
       AND END.TPEND = COL.TPENDREMET) COLETA_CIDORIGEM,
       
     (SELECT END.CIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJDESTINO)
       AND END.TPEND = COL.TPENDDEST) COLETA_CIDDESTINO,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJREMETENTE)
       AND END.TPEND = COL.TPENDREMET) COLETA_UFORIGEM,
       
     (SELECT END.UF
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJDESTINO)
       AND END.TPEND = COL.TPENDDEST) COLETA_UFDESTINO,
     
     (SELECT END.LOCALIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJREMETENTE)
       AND END.TPEND = COL.TPENDREMET) COLETA_LOCALIDADEORIGEM,
     
     (SELECT END.LOCALIDADE
      FROM TDVADM.V_GLB_CLIEND END
     WHERE TRIM(END.CNPJ) = TRIM(COL.CNPJDESTINO)
       AND END.TPEND = COL.TPENDDEST) COLETA_LOCALIDADEDESTINO,
       
     (SELECT PERC.KM
        FROM TDVADM.V_SLF_PERCURSO PERC,
         TDVADM.V_GLB_CLIEND ENDORIGEM,
         TDVADM.V_GLB_CLIEND ENDDESTINO
     WHERE TRIM(ENDORIGEM.CNPJ) = TRIM(COL.CNPJREMETENTE)
       AND ENDORIGEM.TPEND = COL.TPENDREMET
       AND TRIM(ENDDESTINO.CNPJ) = TRIM(COL.CNPJDESTINO)
       AND ENDDESTINO.TPEND = COL.TPENDDEST
       AND PERC.ORIGEMLOCALIDADE = ENDORIGEM.LOCALIDADE
       AND PERC.DESTINOLOCALIDADE = ENDDESTINO.LOCALIDADE) COLETA_KMPERCURSO,
     
     DECODE(COL.PAGADORFRETE, 
        'D', 'DESTINATARIO', 
        'O', 'OUTROS',
        'R', 'REMETENTE', 
        'S', 'SOLICITANTE',
        COL.PAGADORFRETE) COLETA_TPSACADO,
     
     DECODE(COL.PAGADORFRETE, 
        'D', COL.CNPJDESTINO,
        'R', COL.CNPJREMETENTE,
        COL.CNPJPAGADOR) COLETA_CNPJSACADO,
     
     CLI.RAZAOSOCIAL COLETA_RAZAOSACADO,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE REM 
     WHERE TRIM(REM.CNPJ) = TRIM(COL.CNPJREMETENTE)) COLETA_RAZAOREMETENTE,
     
     (SELECT RAZAOSOCIAL 
        FROM TDVADM.V_GLB_CLIENTE DEST 
     WHERE TRIM(DEST.CNPJ) = TRIM(COL.CNPJDESTINO)) COLETA_RAZAODESTINATARIO,
     
     CLI.GRUPO_ECONOMICO COLETA_GRUPOSACADO,
     GRP.NOME COLETA_GRUPOSACADONOME,
     
     (SELECT REM.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE REM
     WHERE TRIM(COL.CNPJREMETENTE) = TRIM(REM.CNPJ)) COLETA_GRUPOREMETENTE,
     
     (SELECT DEST.GRUPO_ECONOMICO
        FROM TDVADM.V_GLB_CLIENTE DEST
     WHERE TRIM(COL.CNPJDESTINO) = TRIM(DEST.CNPJ)) COLETA_GRUPODESTINATARIO,
     
     CASE
     WHEN (SELECT DEST.GRUPO_ECONOMICO
         FROM TDVADM.V_GLB_CLIENTE DEST
          WHERE TRIM(COL.CNPJDESTINO) = TRIM(DEST.CNPJ)) = (SELECT REM.GRUPO_ECONOMICO
                                   FROM TDVADM.V_GLB_CLIENTE REM
                                    WHERE TRIM(COL.CNPJREMETENTE) = TRIM(REM.CNPJ)) AND
      (SELECT DEST.GRUPO_ECONOMICO
         FROM TDVADM.V_GLB_CLIENTE DEST
        WHERE TRIM(COL.CNPJDESTINO) = TRIM(DEST.CNPJ)) = CLI.GRUPO_ECONOMICO THEN
        'TRANSFERÊNCIA'
     ELSE
      CASE 
      WHEN CLI.GRUPO_ECONOMICO = (SELECT DEST.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE DEST
                     WHERE TRIM(COL.CNPJDESTINO) = TRIM(DEST.CNPJ)) THEN
        'INBOUND'
      WHEN CLI.GRUPO_ECONOMICO = (SELECT REM.GRUPO_ECONOMICO
                      FROM TDVADM.V_GLB_CLIENTE REM
                     WHERE TRIM(COL.CNPJREMETENTE) = TRIM(REM.CNPJ)) THEN
        'OUTBOUND'
      ELSE
        'OUTROS'
      END
     END COLETA_OPERACAO,
     
     -- DATAS DA COLETA -----------------------------------------------------------------------------------------------------------------------
       TO_DATE(TO_CHAR(DTSOLICITACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(HORASOLICITACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS') COLETA_DTSOLIC,
     TO_DATE(TO_CHAR(COL.DTPROGRAMACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(COL.HRPROGRAMACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS') COLETA_DTPROG,
     COL.DTAUTORIZACAO COLETA_DTAUTORIZACAO,
     
     GREATEST(TO_DATE(TO_CHAR(DTSOLICITACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(HORASOLICITACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS'),
        NVL(TO_DATE(TO_CHAR(COL.DTPROGRAMACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(COL.HRPROGRAMACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS'), TO_DATE(TO_CHAR(DTSOLICITACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(HORASOLICITACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS')),
        NVL(COL.DTAUTORIZACAO, TO_DATE(TO_CHAR(DTSOLICITACAO, 'DD/MM/YYYY ') || TO_CHAR(TO_DATE(HORASOLICITACAO, 'HH24:MI'), 'HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS'))) MAIOR_DATA,
        
     COL.DATAIMPRESSAO COLETA_DTIMPRESSAO,
     COL.USUARIOIMPRIMIU COLETA_USUARIOIMPRIMIU,
     
     DECODE(COL.ENTOUCOL,
        'E','ENTREGA',
        'C','COLETA',
        COL.ENTOUCOL) COLETA_CATEG,
       CARGA.TPCARGADESC COLETA_TPCARGA,
         
     DECODE(COL.TPCOLETA, 
        'E', 'EXPRESSA', 
        'N', 'NORMAL',
        COL.TPCOLETA) COLETA_TPSOLICITACAO,
     
     COL.ARMAZEM COLETA_ARMAZEMCODIGO,
     ROTA.UF COLETA_UFARMAZEM,
     ROTA.CIDADE COLETA_CIDARMAZEM,
     
     COL.OCORRENCIA COLETA_OCORRENCIACOD,
     OCO.DESCRICAO COLETA_OCORRENCIADESC,
     OCO.FINALIZA COLETA_OCORRENCIAFINALIZA,
         
     SIS.DESCRICAO_MENOR COLETA_SISTEMAORIGEM,
     
     COL.CONTRATO COLETA_CONTRATOCODIGO,
     CONTRATO.DESCRICAO COLETA_CONTRATODESCRICAO
     
  FROM TDVADM.V_ARM_COLETAS COL LEFT JOIN
     TDVADM.V_ARM_COLETAORIGEM SIS
  ON COL.ORIGEMCOD = SIS.CODIGO LEFT JOIN
     TDVADM.V_ARM_COLETAOCOR OCO
  ON OCO.OCORRENCIA = COL.OCORRENCIA LEFT JOIN
     TDVADM.V_FCF_TPCARGAS CARGA 
  ON COL.TPCARGA = CARGA.TPCARGACOD LEFT JOIN
       TDVADM.V_GLB_CLIENTE CLI
    ON TRIM(DECODE(COL.PAGADORFRETE, 
          'D', COL.CNPJDESTINO,
          'R', COL.CNPJREMETENTE,
          COL.CNPJPAGADOR)) = TRIM(CLI.CNPJ) LEFT JOIN
     TDVADM.V_GLB_GRUPOECONOMICO GRP
  ON CLI.GRUPO_ECONOMICO = GRP.GRUPO LEFT JOIN
     TDVADM.V_ARM_ARMAZEM ARM
  ON COL.ARMAZEM = ARM.ARMAZEM LEFT JOIN
     TDVADM.V_GLB_ROTAS ROTA
  ON ARM.ROTA = ROTA.ROTA LEFT JOIN
       TDVADM.V_SLF_CONTRATOS CONTRATO
  ON UPPER(TRIM(CONTRATO.CONTRATO)) = UPPER(TRIM(COL.CONTRATO))
 WHERE DTSOLICITACAO >= (SELECT LIMITE_INFERIOR - TOLERANCIA FROM ANALISE)
   AND DTSOLICITACAO <= (SELECT LIMITE_SUPERIOR FROM ANALISE)
   AND NVL(OCO.CANCELCOLETA, 'N') = 'N'
)
-- FIM DA CRIAÇÃO DE TABELAS -----------------------------------------------------------------------------------

-- LIGAÇÕES DAS CRIAÇÕES ACIMA (LIGAÇÕES DAS TABELAS VALE FRETES, CONHECIMENTOS, NOTAS E COLETAS ---------------
SELECT /* CAMPOS DO VALE DE FRETE */
     VALEFRETE_CODIGO,
     VALEFRETE_SERIE,
     VALEFRETE_ROTA,
     VALEFRETE_SAQUE,
     VALEFRETE_DTEMISSAO,
     VALEFRETE_EMISSOR,
     VALEFRETE_DTCADASTRO,
     VALEFRETE_DTPRAZOMAX,
     VALEFRETE_PLACA,
     VALEFRETE_PLACASAQUE,
     VALEFRETE_TPMOTORISTA,
     VALEFRETE_CTE,
     VALEFRETE_CTESERIE,
     VALEFRETE_CTEROTA,
     VALEFRETE_CATEGORIACOD,
     VALEFRETE_CATEGORIADESC,
     VALEFRETE_VEICULOCAPACIDADE,
     VALEFRETE_VEICULODESCRICAO,
     VALEFRETE_VEICULOEIXOS,
     VALEFRETE_LOCALIDADEORIGEM,
     VALEFRETE_LOCALIDADEDESTINO,
     VALEFRETE_KMPERCURSO,
     VALEFRETE_UFROTA,
     VALEFRETE_CIDROTA,
     
     /* CAMPOS DO CONHECIMENTO */
     CTRC_COLETANUMERO,
     CTRC_COLETACICLO,
     CTRC_CODIGO,
       CTRC_SERIE,
       CTRC_ROTA,
     CTRC_CANCELADO,
     CTRC_CHAVESEFAZ,
     CTRC_CHAVESEFAZ_TXT,
     CTRC_DTEMISSAO,
     CTRC_EMISSOR,
     CTRC_CNPJSACADO,
     CTRC_RAZAOSACADO,
     CTRC_CNPJREMETENTE,
     CTRC_CNPJDESTINATARIO,
     CTRC_TPENDDESTINATARIO,
     CTRC_TPENDREMETENTE,
     CTRC_CIDORIGEM,       
     CTRC_CIDDESTINO,      
     CTRC_UFORIGEM,
     CTRC_UFDESTINO,
     CTRC_KMPERCURSO,
     CTRC_RAZAOREMETENTE,
     CTRC_RAZAODESTINATARIO,
     CTRC_GRUPOSACADO,
     CTRC_GRUPOSACADONOME,
     CTRC_GRUPOREMETENTE,    
     CTRC_GRUPODESTINATARIO,     
     CTRC_OPERACAO,
     CTRC_DTENTREGA,     
     CTRC_UFROTA,
     CTRC_CIDROTA,
     CTRC_VALORPRESTACAO,
     CTRC_OBSERVACAO,
     CTRC_CFOP,
     
     /* CAMPOS DA NOTA */
     NOTA_NUMERO,
     NOTA_CNPJREMETENTE,
     NOTA_CHAVESEFAZ,
     NOTA_CHAVESEFAZ_TXT,
     
     NOTA_PESO,
     NOTA_UNIDADEPESO_DIGITMAN,
     NOTA_PESOBALANCA,
     NOTA_PESOCOBRADO,
     
     NOTA_QTDVOLUMES,
     
     NOTA.NOTA_CONTRATOCODIGO,
     NOTA.NOTA_CONTRATODESCRICAO,
     NOTA.NOTA_ARMAZEMCODIGO,
     NOTA.NOTA_UFARMAZEM,
     NOTA.NOTA_CIDARMAZEM,
     NOTA.NOTA_DIGITACAO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
       CTRC_TPENDREMETENTE
     ELSE
       NOTA.NOTA_TPENDREMETENTE
     END NOTA_TPENDREMETENTE,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
       CTRC_CNPJDESTINATARIO
     ELSE
       NOTA.NOTA_CNPJDESTINATARIO
     END NOTA_CNPJDESTINATARIO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_TPENDDESTINATARIO
     ELSE
         NOTA.NOTA_TPENDDESTINATARIO
     END NOTA_TPENDDESTINATARIO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_CNPJSACADO
     ELSE
         NOTA.NOTA_CNPJSACADO
     END NOTA_CNPJSACADO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_CIDORIGEM
     ELSE
         NOTA.NOTA_CIDORIGEM
     END NOTA_CIDORIGEM,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_CIDDESTINO
     ELSE
         NOTA.NOTA_CIDDESTINO
     END NOTA_CIDDESTINO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_UFORIGEM
     ELSE
         NOTA.NOTA_UFORIGEM
     END NOTA_UFORIGEM,      
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_UFDESTINO
     ELSE
         NOTA.NOTA_UFDESTINO
     END NOTA_UFDESTINO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_KMPERCURSO
     ELSE
         NOTA.NOTA_KMPERCURSO
     END NOTA_KMPERCURSO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_RAZAOSACADO
     ELSE
         NOTA.NOTA_RAZAOSACADO
     END NOTA_RAZAOSACADO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_RAZAOREMETENTE
     ELSE
         NOTA.NOTA_RAZAOREMETENTE
     END NOTA_RAZAOREMETENTE,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_RAZAODESTINATARIO
     ELSE
         NOTA.NOTA_RAZAODESTINATARIO
     END NOTA_RAZAODESTINATARIO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_GRUPOSACADO
     ELSE
         NOTA.NOTA_GRUPOSACADO
     END NOTA_GRUPOSACADO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_GRUPOSACADONOME   
     ELSE
         NOTA.NOTA_GRUPOSACADONOME
     END NOTA_GRUPOSACADONOME,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_GRUPOREMETENTE
     ELSE
         NOTA.NOTA_GRUPOREMETENTE
     END NOTA_GRUPOREMETENTE,    
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_GRUPODESTINATARIO
     ELSE
         NOTA.NOTA_GRUPODESTINATARIO
     END NOTA_GRUPODESTINATARIO,     
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_OPERACAO
     ELSE
         NOTA.NOTA_OPERACAO
     END NOTA_OPERACAO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
         CTRC_DTEMISSAO
     ELSE
         NOTA.NOTA_DTINCLUSAO
     END NOTA_DTINCLUSAO,
     
     CASE
     WHEN NOTA.NOTA_DIGITACAO = 'MANUAL' THEN
       CTRC_EMISSOR
     ELSE
       NOTA_USUARIOINCLUIU
     END NOTA_USUARIOINCLUIU,
     
     NOTA.NOTA_CFOP,
     
     /* EMBALAGEM */
     NOTA.EMBALAGEM_NUMERO,
     NOTA.EMBALAGEM_SEQUENCIA,
     NOTA.EMBALAGEM_ARMAZEMCODIGO,
     NOTA.EMBALAGEM_UFARMAZEM,
     NOTA.EMBALAGEM_CIDARMAZEM,
     NOTA.EMBALAGEM_DTCHECKIN,
     
     /* CAMPOS DA COLETA */
     COL.COLETA_NUMERO,
     COL.COLETA_CICLO,
     COL.COLETA_ASN,
     COL.COLETA_OBSERVACAO,
     COL.COLETA_CNPJREMETENTE,
     COL.COLETA_TPENDREMETENTE,
     COL.COLETA_CNPJDESTINATARIO,
     COL.COLETA_TPENDDESTINATARIO,
     COL.COLETA_CIDORIGEM,
     COL.COLETA_CIDDESTINO,
     COL.COLETA_UFORIGEM,
     COL.COLETA_UFDESTINO,
     COL.COLETA_LOCALIDADEORIGEM,
     COL.COLETA_LOCALIDADEDESTINO,
     COL.COLETA_KMPERCURSO,
     COL.COLETA_TPSACADO,
     COL.COLETA_CNPJSACADO,
     COL.COLETA_RAZAOSACADO,
     COL.COLETA_RAZAOREMETENTE,
     COL.COLETA_RAZAODESTINATARIO,
     COL.COLETA_GRUPOSACADO,
     COL.COLETA_GRUPOSACADONOME,
     COL.COLETA_GRUPOREMETENTE,
     COL.COLETA_GRUPODESTINATARIO,
     COL.COLETA_OPERACAO,
     COL.COLETA_DTSOLIC,
     COL.COLETA_DTPROG,
     COL.COLETA_DTAUTORIZACAO,
     COL.MAIOR_DATA,
     COL.COLETA_DTIMPRESSAO,
     COL.COLETA_USUARIOIMPRIMIU,
     COL.COLETA_CATEG,
     COL.COLETA_TPCARGA,
     COL.COLETA_TPSOLICITACAO,
     COL.COLETA_ARMAZEMCODIGO,
     COL.COLETA_UFARMAZEM,
     COL.COLETA_CIDARMAZEM,
     COL.COLETA_OCORRENCIACOD,
     COL.COLETA_OCORRENCIADESC,
     COL.COLETA_OCORRENCIAFINALIZA,
     COL.COLETA_SISTEMAORIGEM,
     COL.COLETA_CONTRATOCODIGO,
     COL.COLETA_CONTRATODESCRICAO,

     /* ÚLTIMA ATUALIZAÇÃO */
     SYSDATE ULTIMA_ATUALIZACAO,
     (SELECT LIMITE_INFERIOR FROM ANALISE) AS LIMITE_INFERIOR
  FROM NOTAS NOTA FULL OUTER JOIN
     CONHECIMENTOS CTE
  ON CTE.CTRC_CODIGO = NOTA.NOTA_CTE
   AND CTE.CTRC_ROTA = NOTA.NOTA_CTEROTA
   AND CTE.CTRC_SERIE = NOTA.NOTA_CTESERIE FULL OUTER JOIN
       COLETAS COL
  ON NVL(NOTA.NOTA_COLETA, CTE.CTRC_COLETANUMERO) = COL.COLETA_NUMERO
   AND NVL(NOTA.NOTA_COLETACICLO, CTE.CTRC_COLETACICLO) = COL.COLETA_CICLO FULL OUTER JOIN
       VFRETES VF
    ON VF.VALEFRETE_CTE = CTE.CTRC_CODIGO
   AND VF.VALEFRETE_CTESERIE = CTE.CTRC_SERIE
   AND VF.VALEFRETE_CTEROTA = CTE.CTRC_ROTA
 WHERE NVL(CTE.CTRC_CANCELADO, 'N') = 'N' --NÃO CANCELADO
   /* REMOVER DA BASE COLETAS FINALIZADAS NÃO VINCULADAS A NOTA E NEM CONHECIMENTO */
   AND NOT (CTE.CTRC_DTEMISSAO IS NULL AND NOTA.NOTA_NUMERO IS NULL AND NVL(COL.COLETA_OCORRENCIAFINALIZA, 'N') = 'S')
   /* COLETAS DA MODALIDADE ENTREGA, CRIADAS PELO FIFO, SEM NOTA E NEM CONHECIMENTO SÃO CONSIDERADAS ERROS DE SISTEMA E EXCLUÍDAS DA BASE */
   AND NOT (COL.COLETA_SISTEMAORIGEM = 'FIFO' AND COL.COLETA_CATEG = 'ENTREGA' AND CTE.CTRC_DTEMISSAO IS NULL AND NOTA.NOTA_NUMERO IS NULL)
